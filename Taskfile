#!/bin/bash
PATH="$PWD/node_modules/.bin":$PATH

build() {
    set -x
    rm -rfv dist
    cp -rfv src dist
    cat tsconfig.json | jq 'del(.include, .compilerOptions.outDir)' > dist/tsconfig.json
    cp -fv README.md LICENSE package.json dist
    cd dist
    /usr/bin/find . -name '*.spec.ts' | xargs rm -rvf
    tsc -p .
    rm -rvf tsconfig.json
    cd ..
    set +x
}

bundle() {
    set -x
    rm -rfv dist
    cp -rfv src dist
    cat tsconfig.json | jq '.compilerOptions.module = "esnext" | del(.include, .compilerOptions.outDir)' > dist/tsconfig.json
    cp -v README.md LICENSE package.json dist
    cd dist
    npx microbundle --entry cli.ts --target node --no-compress --format cjs --output .
    rm -rvf tsconfig.json
    /usr/bin/find . -name '*.spec.ts' | xargs rm -rvf
    # /usr/bin/find . -name '.rts2*' | xargs rm -rf
    package=$(cat package.json)
    package_name=$(echo $package | jq -r ".name")
    echo "$package" | jq ".main = \"${package_name}.js\"" \
        > package.json
    cd ..
    set +x
}

"$@"
